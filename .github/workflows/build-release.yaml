name: CI Build & Release

on:
  workflow_dispatch:
  push:
    branches: ["main"]

env:
  ACR_NAME: bencwsacr
  IMAGE_TAG: ${{ github.run_id }}

jobs:
  buildJob:
    name: "Build & push images"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout app code repo"
        uses: actions/checkout@v2
        with:
          repository: benc-uk/smilr

      - name: "Authenticate to access ACR"
        uses: docker/login-action@master
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ env.ACR_NAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Build & push: data API"
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./node/data-api/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/smilr/data-api:${{ env.IMAGE_TAG }}
            ${{ env.ACR_NAME }}.azurecr.io/smilr/data-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: "Build & push: frontend"
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./node/frontend/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/smilr/frontend:${{ env.IMAGE_TAG }}
            ${{ env.ACR_NAME }}.azurecr.io/smilr/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  releaseJob:
    name: "Release to Kubernetes"
    runs-on: ubuntu-latest
    # Only release from main
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: buildJob
    environment:
      name: AKS-Live
      url: http://20.103.220.11/
    steps:
      - name: "Checkout app code repo" # Needed for the Helm chart
        uses: actions/checkout@v2
        with:
          repository: benc-uk/smilr

      - name: "Configure kubeconfig"
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.CLUSTER_KUBECONFIG }}

      - name: "Update chart dependencies"
        run: helm dependency update ./kubernetes/helm/smilr

      - name: "Release app with Helm"
        run: |
          helm upgrade myapp ./kubernetes/helm/smilr --install --wait --timeout 180s \
          --set registryPrefix=$ACR_NAME.azurecr.io/ \
          --set frontend.imageTag=$IMAGE_TAG \
          --set dataApi.imageTag=$IMAGE_TAG \
          --set mongodb.enabled=true
